{"version":3,"sources":["../lib/visualTests.js"],"names":["options","config","filter","visualTestFilter","TEST_PORT","info","resolve","alias","displayComponentsSrc","then","defaultComponents","displayComponentsDefaults","componentsSrc","baseTestUrl","scenarios","runRegressionTests","visualTestType","process","exit","Promise","catch","e","reject"],"mappings":";;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAMA;;;;;;AAJA,IAAMA,UAAU,iDAAhB;AACA,IAAMC,SAAU,8BAAgBD,OAAhB,CAAhB;AACA,IAAME,SAASF,QAAQG,gBAAvB;;AAGA,IAAMC,YAAY,oBAAUA,SAA5B;;AAEA,iBAAOC,IAAP;;AAKA,sBAAcJ,OAAOK,OAAP,CAAeC,KAAf,CAAqBC,oBAAnC,EACCC,IADD,CACO,YACP;AACI,QAAMC,oBAAoBT,OAAOK,OAAP,CAAeC,KAAf,CAAqBI,yBAA/C;AACA,QAAMC,gBAAiBX,OAAOK,OAAP,CAAeC,KAAf,CAAqBC,oBAA5C;AACA,QAAMK,oCAAkCT,SAAlC,wBAAN;;AAEA,QAAKJ,QAAQE,MAAb,EACA;AACI,yBAAOG,IAAP,0BAAoCH,MAApC;AACH;;AAED,QAAMY,YAAY,iCAAmBJ,iBAAnB,EACdG,WADc,EACDD,aADC,CAAlB;;AAGA,6BAAeE,SAAf,GAA2BA,SAA3B;;AAEA,yBAAad,OAAb,EAAsB,IAAtB,EAA6BS,IAA7B,CAAmC,YACnC;AACIM;AACH,KAHD;AAIH,CArBD;;AAwBA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAAEd,MAAF,EAC3B;AACI,8BAAUD,QAAQgB,cAAlB,EAAkC,EAAEd,cAAF,EAAUD,cAAV,EAAlC,EACCQ,IADD,CACO,YACP;AACI,yBAAOJ,IAAP,CAAa,gCAAb;AACAY,gBAAQC,IAAR,CAAc,CAAd;AACA,eAAOC,QAAQb,OAAR,CAAiB,MAAjB,CAAP;AACA;AACH,KAPD,EAOIc,KAPJ,CAOW,UAAEC,CAAF,EACX;AACI,yBAAOhB,IAAP,CAAa,4DAAb;AACAY,gBAAQC,IAAR,CAAc,CAAd;AACA,eAAOC,QAAQG,MAAR,CAAgB,QAAhB,CAAP;AACA;AACH,KAbD;AAcH,CAhBD;;AAmBA","file":"visualTests.js","sourcesContent":["\nimport commandLineArgs     from 'command-line-args';\nimport backstop            from 'backstopjs';\n\nimport logger              from './logger';\nimport optionDefinitions   from './cli-args';\nimport generateConfig      from './generateConfig';\nimport generateScenarios   from './generateScenarios';\nimport backstopConfig      from '../backstop-config';\nimport generateDocs        from './docgen';\nimport setupServer         from './serve';\n\nconst options = commandLineArgs( optionDefinitions );\nconst config  = generateConfig( options );\nconst filter = options.visualTestFilter;\n\nimport CONSTANTS           from '../constants';\nconst TEST_PORT = CONSTANTS.TEST_PORT;\n\nlogger.info( `Setting up visual tests`)\n\n\n\n\ngenerateDocs( config.resolve.alias.displayComponentsSrc )\n.then( () =>\n{\n    const defaultComponents = config.resolve.alias.displayComponentsDefaults;\n    const componentsSrc  = config.resolve.alias.displayComponentsSrc;\n    const baseTestUrl = `http://localhost:${TEST_PORT}/#/componentToTest/`;\n\n    if ( options.filter )\n    {\n        logger.info( `Filtering tests for ${filter}` );\n    }\n\n    const scenarios = generateScenarios( defaultComponents,\n        baseTestUrl, componentsSrc );\n\n    backstopConfig.scenarios = scenarios;\n\n    setupServer( options, true ).then( () =>\n    {\n        runRegressionTests( backstopConfig );\n    } );\n} );\n\n\nconst runRegressionTests = ( config ) =>\n{\n    backstop( options.visualTestType, { filter, config  } )\n    .then( () =>\n    {\n        logger.info( 'Backstop finished. Tests pass!' );\n        process.exit( 0 );\n        return Promise.resolve( 'done' );\n        // test successful\n    } ).catch( ( e ) =>\n    {\n        logger.info( 'Backstop finished. Tests failed :| . Try `yarn openReport`' );\n        process.exit( 1 );\n        return Promise.reject( 'failed' );\n        // test failed\n    } );\n};\n\n\n// setupServer( options, true );\n"]}