{"version":3,"sources":["../lib/visualTests.js"],"names":["options","optionDefinitions","config","filter","visualTestFilter","TEST_PORT","CONSTANTS","logger","info","resolve","alias","displayComponentsSrc","then","defaultComponents","displayComponentsDefaults","componentsSrc","baseTestUrl","scenarios","backstopConfig","runRegressionTests","visualTestType","process","exit","Promise","catch","e","reject"],"mappings":"AAAA;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;;;AAJA,IAAMA,OAAO,GAAG,8BAAiBC,gBAAjB,CAAhB;AACA,IAAMC,MAAM,GAAI,6BAAgBF,OAAhB,CAAhB;AACA,IAAMG,MAAM,GAAGH,OAAO,CAACI,gBAAvB;AAGA,IAAMC,SAAS,GAAGC,mBAAUD,SAA5B;;AAEAE,gBAAOC,IAAP;;AAKA,qBAAcN,MAAM,CAACO,OAAP,CAAeC,KAAf,CAAqBC,oBAAnC,EACCC,IADD,CACO,YACP;AACI,MAAMC,iBAAiB,GAAGX,MAAM,CAACO,OAAP,CAAeC,KAAf,CAAqBI,yBAA/C;AACA,MAAMC,aAAa,GAAIb,MAAM,CAACO,OAAP,CAAeC,KAAf,CAAqBC,oBAA5C;AACA,MAAMK,WAAW,8BAAuBX,SAAvB,wBAAjB;;AAEA,MAAKL,OAAO,CAACG,MAAb,EACA;AACII,oBAAOC,IAAP,+BAAoCL,MAApC;AACH;;AAED,MAAMc,SAAS,GAAG,gCAAmBJ,iBAAnB,EACdG,WADc,EACDD,aADC,CAAlB;AAGAG,0BAAeD,SAAf,GAA2BA,SAA3B;AAEA,sBAAajB,OAAb,EAAsB,IAAtB,EAA6BY,IAA7B,CAAmC,YACnC;AACIO,IAAAA,kBAAkB,CAAED,uBAAF,CAAlB;AACH,GAHD;AAIH,CArBD;;AAwBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEjB,MAAF,EAC3B;AACI,2BAAUF,OAAO,CAACoB,cAAlB,EAAkC;AAAEjB,IAAAA,MAAM,EAANA,MAAF;AAAUD,IAAAA,MAAM,EAANA;AAAV,GAAlC,EACCU,IADD,CACO,YACP;AACIL,oBAAOC,IAAP,CAAa,gCAAb;;AACAa,IAAAA,OAAO,CAACC,IAAR,CAAc,CAAd;AACA,WAAOC,OAAO,CAACd,OAAR,CAAiB,MAAjB,CAAP,CAHJ,CAII;AACH,GAPD,EAOIe,KAPJ,CAOW,UAAEC,CAAF,EACX;AACIlB,oBAAOC,IAAP,CAAa,4DAAb;;AACAa,IAAAA,OAAO,CAACC,IAAR,CAAc,CAAd;AACA,WAAOC,OAAO,CAACG,MAAR,CAAgB,QAAhB,CAAP,CAHJ,CAII;AACH,GAbD;AAcH,CAhBD,C,CAmBA","sourcesContent":["#! /usr/bin/env node\nimport commandLineArgs     from 'command-line-args';\nimport backstop            from 'backstopjs';\n\nimport logger              from './logger';\nimport optionDefinitions   from './cli-args';\nimport generateConfig      from './generateConfig';\nimport generateScenarios   from './generateScenarios';\nimport backstopConfig      from '../backstop-config';\nimport generateDocs        from './docgen';\nimport setupServer         from './serve';\n\nconst options = commandLineArgs( optionDefinitions );\nconst config  = generateConfig( options );\nconst filter = options.visualTestFilter;\n\nimport CONSTANTS           from '../constants';\nconst TEST_PORT = CONSTANTS.TEST_PORT;\n\nlogger.info( `Setting up visual tests`)\n\n\n\n\ngenerateDocs( config.resolve.alias.displayComponentsSrc )\n.then( () =>\n{\n    const defaultComponents = config.resolve.alias.displayComponentsDefaults;\n    const componentsSrc  = config.resolve.alias.displayComponentsSrc;\n    const baseTestUrl = `http://localhost:${TEST_PORT}/#/componentToTest/`;\n\n    if ( options.filter )\n    {\n        logger.info( `Filtering tests for ${filter}` );\n    }\n\n    const scenarios = generateScenarios( defaultComponents,\n        baseTestUrl, componentsSrc );\n\n    backstopConfig.scenarios = scenarios;\n\n    setupServer( options, true ).then( () =>\n    {\n        runRegressionTests( backstopConfig );\n    } );\n} );\n\n\nconst runRegressionTests = ( config ) =>\n{\n    backstop( options.visualTestType, { filter, config  } )\n    .then( () =>\n    {\n        logger.info( 'Backstop finished. Tests pass!' );\n        process.exit( 0 );\n        return Promise.resolve( 'done' );\n        // test successful\n    } ).catch( ( e ) =>\n    {\n        logger.info( 'Backstop finished. Tests failed :| . Try `yarn openReport`' );\n        process.exit( 1 );\n        return Promise.reject( 'failed' );\n        // test failed\n    } );\n};\n\n\n// setupServer( options, true );\n"],"file":"visualTests.js"}