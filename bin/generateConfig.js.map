{"version":3,"sources":["../lib/generateConfig.js"],"names":["pwd","process","cwd","generateConfig","options","envConfig","env","configToUse","Object","assign","distFiles","dist","path","resolve","lib","distPath","fs","readFileSync","mainEntry","JSON","parse","main","srcFiles","src","jsonDefaults","props","logger","info","data","HtmlWebpackPlugin","require","HtmlWebpackHarddiskPlugin","html","title","template","__dirname","filename","alwaysWriteToDisk","files","js","hdHelper","plugins","push","alias","displayComponents","externals","displayComponentsDist","libName","displayComponentsSrc","displayComponentsDefaults"],"mappings":"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","sourcesContent":["import path      from 'path';\nimport fs        from 'fs';\n\nimport logger    from './logger';\nimport getConfig from '../webpack.config';\n\nconst pwd = process.cwd();\n\nconst generateConfig = ( options ) =>\n{\n    const envConfig   = getConfig( options.env );\n    const configToUse = Object.assign( {}, envConfig );\n\n    let distFiles;\n\n    if( options.dist )\n    {\n        distFiles = path.resolve( options.lib, options.dist ) ;\n    } else\n    {\n        const distPath  = fs.readFileSync(`${options.lib}/package.json`, 'utf-8');\n        const mainEntry = JSON.parse( distPath ).main;\n\n        if( mainEntry )\n        {\n            distFiles = path.resolve( options.lib, mainEntry );\n        } else\n        {\n            distFiles = path.resolve( options.lib, 'index.js' )\n        }\n    }\n\n    const srcFiles = path.resolve(\n        pwd,\n        options.src\n    );\n\n    const jsonDefaults = path.resolve( pwd, options.props );\n\n\n    logger.info( '****************************************' );\n    logger.info( '*****  Generating Lochness Config  *****' );\n    logger.info( '****************************************' );\n    logger.data( 'Using:' );\n\n    logger.data( 'src: ', srcFiles );\n    logger.data( 'dist: ', distFiles );\n    logger.data( 'defaults: ', jsonDefaults );\n\n    const HtmlWebpackPlugin = require( 'html-webpack-plugin' );\n    const HtmlWebpackHarddiskPlugin = require( 'html-webpack-harddisk-plugin' );\n\n    const html = new HtmlWebpackPlugin(\n        {\n            title             : 'LochNess: Check your UI',\n            template          : `${__dirname}/../src/template.ejs`,\n            filename          : '../index.html',\n            alwaysWriteToDisk : true,\n            files             : {\n                js  : [ 'app.js' ]\n            }\n        }\n    );\n\n    const hdHelper = new HtmlWebpackHarddiskPlugin();\n\n    configToUse.plugins.push( html );\n    configToUse.plugins.push( hdHelper );\n\n    configToUse.resolve.alias.displayComponents         = path.resolve( pwd, options.lib );\n    configToUse.externals.displayComponentsDist         = options.libName;\n    configToUse.resolve.alias.displayComponentsDist     = distFiles;\n    configToUse.resolve.alias.displayComponentsSrc      = srcFiles;\n    configToUse.resolve.alias.displayComponentsDefaults = jsonDefaults;\n\n    return configToUse;\n};\n\nexport default generateConfig;\n"],"file":"generateConfig.js"}